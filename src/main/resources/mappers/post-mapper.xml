<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="post2">
	
	<resultMap id="postMap" type="post2">
		<id column="post_no" property="postNo"/>
		<result column="post_date" property="postDate"/>
		<result column="post_title" property="postTitle"/>
		<result column="post_content" property="postContent"/>
		<result column="category_no" property="categoryNo"/>
		<result column="subject_no" property="subjectNo"/>
		<result column="view_count" property="viewCount"/>
		<result column="is_temp" property="isTemp"/>
		<result column="is_deleted" property="isDeleted"/>
		<result column="product_type" property="productType"/>
		<result column="is_fix" property="isFix"/>
		<association property="member" javaType="member2">
			<id column="member_no" property="memberNo"/>
			<result column="member_name" property="memberName"/>
			<result column="member_id" property="memberId"/>
			<result column="member_pw" property="memberPw"/>
			<result column="email" property="email"/>
			<result column="phone" property="phone"/>
			<result column="address" property="address"/>
			<result column="birthday" property="birthday"/>
			<result column="edu_type" property="eduType"/>
			<result column="subject_no" property="subjectNo"/>
		</association>
		<association property="product2" javaType="product2">
	        <id column="product_no" property="productNo"/>
	        <result column="is_free" property="isFree"/>
	        <result column="product_price" property="productPrice"/>
	        <result column="has_delivery_fee" property="hasDeliveryFee"/>
	        <result column="delivery_fee" property="deliveryFee"/>
	        <result column="stock_count" property="stockCount"/>
	    </association>
	    <association property="file2" javaType="file2">
	        <id column="file_no" property="fileNo"/>
	        <result column="is_free" property="isFree"/>
	        <result column="file_price" property="filePrice"/>
	        <result column="sale_period" property="salePeriod"/>
	        <result column="oriname" property="oriname"/>
	        <result column="renamed" property="renamed"/>
	    </association>
		<collection property="postImg" resultMap="image2.imageMap"/>
	</resultMap>
	
	<!-- boardList.jsp에서 사용할 정보들 -->
	<select id="selectPostByCategory" resultMap="postMap" parameterType="map">
	    SELECT P.*, M.*, PR.*, F.*, I.*
	    FROM (SELECT ROWNUM AS RNUM, P.*
	          FROM (SELECT * FROM POST2 
	          		WHERE CATEGORY_NO=#{categoryNo} AND PRODUCT_TYPE != 0
	          		ORDER BY POST_NO DESC)P
	         ) P
	    LEFT JOIN MEMBER2 M ON P.MEMBER_NO = M.MEMBER_NO
	    LEFT JOIN PRODUCT2 PR ON P.POST_NO = PR.POST_NO
	    LEFT JOIN FILE2 F ON P.POST_NO = F.POST_NO
	    LEFT JOIN IMAGE2 I ON P.POST_NO = I.POST_NO
	    WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	<!-- boardList.jsp에서 페이징바에 사용할 전체 게시글의 개수 -->
	<select id="getTotalCount" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM POST2
		WHERE CATEGORY_NO = #{categoryNo}
	</select>
	<!-- boardList.jsp에서 공지사항에 사용할 정보 -->
	<select id="selectNotice" resultMap="postMap">
		SELECT * FROM post2 WHERE PRODUCT_TYPE=0 AND IS_FIX=1
	</select>
	<!-- AdminMenu.jsp에서 공지사항에 사용할 정보 -->
	<select id="selectAllNotify" resultMap="postMap">
	    SELECT P.*, M.MEMBER_NO, M.MEMBER_NAME
	    FROM (
	        SELECT *
	        FROM POST2
	        WHERE PRODUCT_TYPE = 0
	        ORDER BY IS_FIX DESC, POST_NO DESC
	    ) P
	    LEFT JOIN MEMBER2 M ON P.MEMBER_NO = M.MEMBER_NO
	</select>
	<!-- boardList.jsp에 띄울 이미지 -->
	<select id="selectThumbnailByPost" resultMap="image2.imageMap">
		SELECT * FROM IMAGE2 WHERE POST_NO=#{postNo} AND IMG_SEQ=1
	</select>
	<!-- Post2 객체 불러오기 -->
	<select id="selectPostJoinAll" parameterType="_int" resultMap="postMap">
		SELECT P.*, M.*, PR.*, F.*, I.*
	    FROM (SELECT * FROM POST2 WHERE post_no=#{postNo}) P
	    LEFT JOIN MEMBER2 M ON P.MEMBER_NO = M.MEMBER_NO
	    LEFT JOIN PRODUCT2 PR ON P.POST_NO = PR.POST_NO
	    LEFT JOIN FILE2 F ON P.POST_NO = F.POST_NO
	    LEFT JOIN IMAGE2 I ON P.POST_NO = I.POST_NO
	</select>
	<!-- viewPost.jsp에서 이미지 불러오기 -->
	<select id="selectImageNo" parameterType="_int" resultMap="image2.imageMap">
		SELECT * FROM IMAGE2 WHERE POST_NO=#{postNo}
	</select>
	
	<!-- 메인 페이지에서 사용할 인기글 조회 로직 -->
	<select id="selectPostByPopular" resultMap="postMap">
		SELECT * 
		FROM (SELECT * FROM post2 
			WHERE PRODUCT_TYPE != 0
			ORDER BY VIEW_COUNT DESC)
			LEFT JOIN MEMBER2 USING (MEMBER_NO)
		WHERE 8 >= ROWNUM
	</select>
	
	<!-- adminmenu.jsp 공지사항 상단고정 상태 토글 -->
	<select id="toggleNotifyFix" parameterType="_int" >
		UPDATE POST2 
		SET IS_FIX = CASE 
		                WHEN IS_FIX = 1 THEN 0 
		                ELSE 1 
		             END 
		WHERE POST_NO = #{postNo}
	</select>
	
	<!-- adminmenu.jsp 게시글 번호로 상세 조회 (기존 쿼리가 있다면 사용) -->
	<select id="selectPostByNoOnAdminMenu" parameterType="_int" resultMap="postMap">
	    SELECT P.*, M.* 
	    FROM POST2 P 
	    LEFT JOIN MEMBER2 M ON P.MEMBER_NO = M.MEMBER_NO 
	    WHERE P.POST_NO = #{postNo}
	</select>
	
	<!-- 공지사항 등록 -->
	<insert id="insertNotify" parameterType="post2">
	INSERT INTO POST2 (
		POST_NO,
		POST_DATE,
		POST_TITLE,
		POST_CONTENT,
		VIEW_COUNT,
		IS_TEMP,
		MEMBER_NO,
		IS_DELETED,
		PRODUCT_TYPE,
		IS_FIX,
        SUBJECT_NO,
        CATEGORY_NO
	) VALUES (
		SEQ_POST2_NO.NEXTVAL,
		SYSDATE,
		#{postTitle},
		#{postContent},
		DEFAULT,
		DEFAULT,
		#{member.memberNo},
		DEFAULT,
		0,
		#{isFix},
        1,
        1
	)
	</insert>
	
	<!-- 최근 등록된 공지사항 번호 조회 -->
	<select id="selectLastNotifyNo" resultType="_int">
		SELECT MAX(POST_NO)
		FROM POST2
		WHERE PRODUCT_TYPE = 0
	</select>
	
	<!-- 게시글 등록 -->
	<insert id="insertPost" parameterType="post2" >
	INSERT INTO POST2 (
		POST_NO,
		POST_DATE,
		POST_TITLE,
		POST_CONTENT,
		VIEW_COUNT,
		IS_TEMP,
		MEMBER_NO,
		IS_DELETED,
		PRODUCT_TYPE,
		IS_FIX,
        SUBJECT_NO,
        CATEGORY_NO
	) VALUES (
		SEQ_POST2_NO.NEXTVAL, 	<!-- POST_NO -->
		SYSDATE,				<!-- POST_DATE -->
		#{postTitle},
		#{postContent},
		DEFAULT,				<!-- VIEW_COUNT -->
		#{isTemp},
		#{member.memberNo},
		DEFAULT,				<!-- IS_DELETED -->
		#{productType},
		#{isFix},
        #{subjectNo},
        #{categoryNo}
	)
	</insert>
	
	<select id="selectLastPostNo" resultType="_int">
		SELECT SEQ_POST2_NO.CURRVAL FROM DUAL
	</select>
	
	<select id="insertProduct" parameterType="post2">
	INSERT INTO PRODUCT2 (
		PRODUCT_NO,
		POST_NO,
		IS_FREE,
		PRODUCT_PRICE,
		HAS_DELIVERY_FEE,
		DELIVERY_FEE,
		STOCK_COUNT
	) VALUES (
		SEQ_PRODUCT2_NO.NEXTVAL,
		#{postNo},
		#{product2.isFree},
		#{product2.productPrice},
		#{product2.hasDeliveryFee},
		#{product2.deliveryFee},
		#{product2.stockCount}
	)
	</select>
	
	<select id="insertFile" parameterType="post2">
	INSERT INTO FILE2 (
		FILE_NO,
		POST_NO,
		IS_FREE,
		FILE_PRICE,
		SALE_PERIOD,
		ORINAME,
		RENAMED
	) VALUES (
		SEQ_FILE2_NO.NEXTVAL,
		#{postNo},
		#{file2.isFree},
		#{file2.filePrice},
		#{file2.salePeriod},
		#{file2.oriname},
		#{file2.renamed}
	)
	</select>
	
	<select id="selectDistrict" parameterType="string" resultType="string">
		SELECT DISTINCT DISTRICT
		FROM SCHOOL12
		WHERE REGION LIKE
		CASE #{region}
			WHEN '서울' THEN '서울%'
			WHEN '경기' THEN '경기%'
			WHEN '인천' THEN '인천%'
			WHEN '부산' THEN '부산%'
			WHEN '세종' THEN '세종%'
			WHEN '광주' THEN '광주%'
			WHEN '대구' THEN '대구%'
			WHEN '대전' THEN '대전%'
			WHEN '울산' THEN '울산%'
			WHEN '강원' THEN '강원%'
			WHEN '충남' THEN '충청남도'
			WHEN '충북' THEN '충청북도'
			WHEN '경남' THEN '경상남도'
			WHEN '경북' THEN '경상북도'
			WHEN '전남' THEN '전라남도'
			WHEN '전북' THEN '전%북%'
			WHEN '제주' THEN '제주%'
		END
		ORDER BY DISTRICT
	</select>
	
	<select id="selectSchool" parameterType="string" resultType="string">
		SELECT DISTINCT SCHOOL_NAME
		FROM SCHOOL12
		WHERE DISTRICT = #{district}
		AND SCHOOL_NAME LIKE '%' || #{schoolType}
		ORDER BY SCHOOL_NAME
	</select>
	
	
	<select id="selectAllPost" parameterType="map" resultMap="postMap">
		SELECT * 
		FROM (SELECT ROWNUM AS RNUM, P.*
				FROM (SELECT * FROM POST2 ORDER BY POST_NO DESC) P)
		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectAllPostById" parameterType="map" resultMap="postMap">
		SELECT * 
		FROM (SELECT ROWNUM AS RNUM, P.*
				FROM (SELECT * FROM POST2 
						WHERE MEMBER_NO=#{memberNo} 
						ORDER BY POST_NO DESC) P)
		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
</mapper>
